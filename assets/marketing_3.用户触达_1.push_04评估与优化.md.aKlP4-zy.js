import{_ as l,o as a,c as i,R as p}from"./chunks/framework.rW_MhUre.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"marketing/3.用户触达/1.push/04评估与优化.md","filePath":"marketing/3.用户触达/1.push/04评估与优化.md","lastUpdated":1701745280000}'),s={name:"marketing/3.用户触达/1.push/04评估与优化.md"},h=p('<h2 id="如何系统评估-push-功能" tabindex="-1">如何系统评估 push 功能？ <a class="header-anchor" href="#如何系统评估-push-功能" aria-label="Permalink to &quot;如何系统评估 push 功能？&quot;">​</a></h2><p>从用户和业务出发，一般情况下，我们对 push 的评估和优化主要从功能体验和转化效果两个方面入手，制定体验策略和增长策略方案。 功能体验：主要指 push 功能对用户和业务体验的完整性。Push 系统应该在兼顾业务需求多样性的同时，不过分影响用户体验。 转化效果：围绕『到达率』和『点击率』两个关键指标，优化功能，提高 push 转化率。</p><h2 id="体验策略" tabindex="-1">体验策略 <a class="header-anchor" href="#体验策略" aria-label="Permalink to &quot;体验策略&quot;">​</a></h2><h3 id="基本原则" tabindex="-1">基本原则 <a class="header-anchor" href="#基本原则" aria-label="Permalink to &quot;基本原则&quot;">​</a></h3><p>Push 承担多条业务线的触达需求，因此其内容以活动促销相关为主。多呈现发送量大、频次高的特征，因此极其容易引起用户反感，导致用户关闭推送功能，影响推送效果。 因此从用户体验出发，一般 push 内容尽量考虑以下几个方面：</p><ol><li>内容与用户相关：内容应该与用户具有较强关联性，对用户有价值；</li><li>允许用户决定接收哪类消息：在推送的内容类型较多时，给与用户主动设置的权利；</li><li>Push 平台做全局规则，以决定当天当前是否应该向用户推送 push <ul><li>消息接收时间：如，一般情况，可以默认用户接收 push 时间为 9 点-22 点，其他时间 push 消息不接收或静默接收，以免影响用户休息；</li><li>消息接收总量：根据实际需要和用户承受力，限制促销 push 的接收量，如每日上限 4 条营销 push，超出不接收或接收不提示；</li></ul></li><li>优先级原则：推送任务多，应当针对推送任务设定优先级。系统每天根据推送优先级做判断，推送高质量高优先级的内容，平衡业务增长与用户体验的诉求；</li></ol><h3 id="触发类-push-的体验优化" tabindex="-1">触发类 push 的体验优化 <a class="header-anchor" href="#触发类-push-的体验优化" aria-label="Permalink to &quot;触发类 push 的体验优化&quot;">​</a></h3><p>一般为自动触发的重要业务通知，如比如，订单发货通知、秒杀提醒通知、签到提示通知、评论点赞通知、开课提醒等等。 要根据不同的业务类型的特点，对推送策略做统一处理，保证对用户来说，既不错过重要消息，又不过分打扰。</p><p>假设，有一家社区电商平台，业务场景多样，既有社区互动消息，又有电商交易服务通知，以及秒杀抢购提醒。一名活跃用户一天内将收到许多消息。</p><p>如何平衡这些通知需求呢？</p><p>首先按业务属性和重要程度将系统 push 进行分类，分成<strong>交易物流消息</strong>、<strong>社区互动消息</strong>、<strong>定时消息</strong></p><ul><li><p>交易物流消息（通用型）：优先级最高，用户一旦触发，就进行推送，不做数量和时间限制。如『支付成功提醒、订单退款成功提醒”』等归入此类；</p></li><li><p>社区互动消息：此类消息优先级较低，但和用户紧密相关，因此数量不限制。考虑用户体验，接收提醒时间适当限制在 8~22 点。『收到评论、收到回答』等归入此类；</p><ul><li>部分互动消息，虽然与用户相关，但信息密度低，时效性不强，每次触发都要推送，会严重干扰用户，比如『点赞、关注、收藏提醒』通知。这类消息在业务设计上，应该进一步优化提醒逻辑。比如可设置如下规则：</li><li>每隔半小时检查用户是否收到相关类型的消息，如果收到，则进行提示。如『过去半小时，有 12 个小伙伴点赞了你的帖子』、『小明等 10 名小伙伴收藏了你的回答』。这种聚合在一起的消息，也助于强化消息信息密度，促进用户点击。</li></ul></li><li><p>订阅类通知：此类消息 触发依赖于业务设置的规则，重要性不能准确评估，一般不做时间和数量限制。『过期提示、秒杀提醒』这类消息，需要每天或每分钟检查数据，筛选出目标群体进行推送。</p></li></ul><h3 id="优先级原则在促销推送的应用" tabindex="-1">优先级原则在促销推送的应用 <a class="header-anchor" href="#优先级原则在促销推送的应用" aria-label="Permalink to &quot;优先级原则在促销推送的应用&quot;">​</a></h3><p>当业务 push 量很大时，通过限制单个用户接收总量，虽然提高了用户体验，但很容易把重要的消息埋没。 比如，用户一天接收营销消息设定上限为每天 3 条。现在有 5 条营销 push 从 8 点-20 点依次发送。内容和优先级如下：</p><ul><li>第 1 条 push，10 点发送，优先级 3</li><li>第 2 条 push，11 点发送，优先级 4</li><li>第 3 条 push，13 点发送，优先级 4</li><li>第 4 条 push，17 点发送，优先级 2</li><li>第 5 条 push，20 点发送，优先级 1</li></ul><p>在前一日做推送计划时，前三条优先级不如后面两条高，但是后面两条定时发送时间比较晚。这种情况，如果按时间设置发送计划，会由于前三条低优先级 push 占用了用户当日 push 接收上限，导致后面的重要 push 无法得到有效曝光。 这是种情况的处理思路，可以系统再整理次日 push 发送计划时，先排优先级，再排时间，按优先保证优先级高的 push 得到有效发送，同等优先级按时间发送，提升重要 push 的曝光。</p><h2 id="增长策略" tabindex="-1">增长策略 <a class="header-anchor" href="#增长策略" aria-label="Permalink to &quot;增长策略&quot;">​</a></h2><p>Push 的核心指标是路径转化的第一步，即使用户触达消息并进入到转化路径中。影响这一步的实际转化效果，主要与两个主指标相关：<strong>到达率</strong>和<strong>点击率</strong>，因此，当我们着手优化或创建 push 时，其优化策略一般也围绕这两个方面思考。 （注：这里所提及的功能和发送入口都为自建推送系统）</p><h3 id="到达率" tabindex="-1">到达率 <a class="header-anchor" href="#到达率" aria-label="Permalink to &quot;到达率&quot;">​</a></h3><p>定义，即一条消息到达用户手机~<s>并展示出来</s>~，实际消息到达数/计划消息发送数 * 100% [[补充：push 推送流程]] 通过上图我们知道，影响到达率的几个关键点：</p><p><strong>推送准确度</strong> 主要包含两个方面：1. 时效准确度；2. 目标人群的准确度。 『时效准确度』要求 push 消息在特定时间范围内，及时到达用户设备上。在功能层面可以支持消息定时发送。但消息的推送速度，主要受推送量级影响，当推送目标群体过大时，服务器处理压力大，必然影响到达时间。除非消息的时效性要求非常高，一般情况不做严格的要求。（确实有这类场景，可考虑其他触达形式）</p><p>『人群准确度』除以用户 id 名单进行推送外，通过用户标签或画像策略发起的定时推送任务，创建时和推送时覆盖的用户群体一定存在一定数据差异。这种差异主要是由于数据标签更新频率导致。</p><p>如，某个推送任务，计划每天『向注册天数 ＜1 天』的新用户发送一条推送。 Push 系统每天凌晨 1 点组织第二天推送的用户名单。但数据仓库每天 2 点更新前一天『注册时间』标签，由于标签更新时间晚于 push 系统拉取用户时间，导致这条推送任务查询『注册天数＜1』的用户数为 0，导致任务无法执行。</p><p>这种问题，可以将 push 系统获取数据时间放到数据仓库更新时间之后即可解决。但最优方案还是要优化计算性能，提高标签更新频率，如果将注册天数标签调整为实时更新，可以彻底解决此类问题。</p><p><strong>第三方推送服务商处理</strong> 接入第三方推送 SDK 后，当消息任务到达后，第三方服务会根据用户设备在线情况，对消息推送方式进行如下处理。</p><ul><li>当设备在线（app 前台运行）时：第三方系统处理推送，进行消息展示；设备在线，消息到达率有保证；</li><li>当设备离线（App 未运行）时： <ul><li>如已接入相应厂商服务，第三方推送系统将消息发送给厂商推送系统，由厂商处理消息展示。厂商优势，消息到达率有一定保证；</li><li>如未接入厂商服务，或消息超限时，第三方推送系统将消息保存到离线消息库中，如消息有效期内，进程活跃，则消息进行下发；否则，消息有效期内，设备仍未在线，或消息过期，消息无法到达用户设备上。此时消息到达率受影响。</li></ul></li></ul><p>因此，接入第三方推送服务后的消息到达率，主要由上面三种场景的处理方式影响，其中最后一种场景，对消息到达有较大影响。具体优化可以从这三个角度入手：</p><ul><li>消息有效期：消息可以设定较长的有效期，以保证在有效期内，设备最大可能在线。一般设置为 24 小时左右。</li><li>设备进程保活：通过设备上已接入相同第三方推送服务，且活跃的 App 激活进程，进而下发消息。具体提升效果取决于第三方推送 SDK 在 Android 应用的覆盖度：</li></ul><p>进程保活的风险：①费电②隐私侵犯（部分厂商可能禁止此类行为；特定厂商如小米，不允许此操作）</p><ul><li>覆盖接入更多手机厂商推送服务：在设备离线时，将消息优先发送至厂商服务处理。厂商服务消息不关注设备是否在线，只要已安装，可以保证到达率。</li></ul><p>目前，主流厂商有，小米、华为、OPPO、vivo 等</p><p><strong>手机厂商消息处理</strong> 正常情况下，经厂商通道发送的消息有着较高的到达率，98% 左右。但由于厂商为了提升用户体验，其将消息分类成系统通知消息和运营营销消息两大类，并分别在每日发送数量和频次上做了限制。因此当消息发送超出限制后，会影响送达。</p><ul><li>针对这种情况，平台内对消息也要做分类处理，通知消息优先级高，更要保证送达，走厂商系统通知消息类型发送，避免通知/营销消息额度被错误占用。</li><li>另一方面，可接入第三方服务，当消息额度已满时，或设备前台运行时，优先将消息通过第三方消息透传服务进行送达。</li></ul><p>第三方推送服务和厂商推送服务，互为补充，可以尽可能的提升消息送达。</p><p>消息到达率的影响还受用户是否授权了 App 推送权限，授权率主要受日常 push 运营带来的用户体验影响，这里不再赘述。</p><h3 id="展示率" tabindex="-1">展示率 <a class="header-anchor" href="#展示率" aria-label="Permalink to &quot;展示率&quot;">​</a></h3><p>展示量一般指，消息到达客户端后，在消息通知栏展示。消息展示后，用户才能触发点击。详细阅读各厂商的推送文档可知，到达量不等于展示量。</p><p>不同厂商统计口径有差别，苹果、魅族的展示量不包含关闭通知设备；华为、ov、小米不支持统计展示量；部分第三方推送服务的展示量含关闭通知设备（第三方推送渠道的消息，当用户设备前台运行，且通知打开时，消息会通过透传的形式直接发送到到设备上。此种场景，部分第三方侧只记录到达率，但并不记录展示量，也就没有点击量。分母变大，点击率降低）。</p><p>由于不同厂商, 不同系统的对消息展示处理规则不同，加之数据提供颗粒度和统计口径都有差异，导致优化成本较高，这里不再把展示率作为重要指标做细化分析，此维度数据的总和只具备一定参考性，如需深入优化，则需进一步监测每个渠道的展示量。我们默认到达即展示。</p><h3 id="点击率" tabindex="-1">点击率 <a class="header-anchor" href="#点击率" aria-label="Permalink to &quot;点击率&quot;">​</a></h3><p>消息经创建到触达，再到展示，最后促使用户点击，一个转化路径。影响用户点击与否，更侧重内容运营的质量。具体参考下面，『内容策略』。</p><h2 id="内容策略" tabindex="-1">内容策略 <a class="header-anchor" href="#内容策略" aria-label="Permalink to &quot;内容策略&quot;">​</a></h2><p>随着精细化运营发展，Push 也在结合业务更加紧密，朝着精细化方向发展，一方面，要求对用户群做更细致的分群策略，基于特定场景做推送。另一方面，随着推送功能迭代，推送内容和形式的也逐渐多样化。</p><h3 id="用户与场景" tabindex="-1">用户与场景 <a class="header-anchor" href="#用户与场景" aria-label="Permalink to &quot;用户与场景&quot;">​</a></h3><ul><li>从用户转化方面考量，不同周期下的用户特征和需求差异较大，围绕用户生命周期进行用户分群，设计分群推送策略，提升转化成为常见打法。</li><li>从业务需求角度，针对不同业务场景设计推送，O2O 类和电商类产品最为典型。 <ul><li>对医美、大众点评等到店产品来说，地域和用户偏好是非常重要的两个维度，因此 push 机制会根据用户偏好、所在城市、地理围栏等多标签组合进行分群推送；</li><li>地理围栏：新用户进入地理划定区域内，消息自动触发推送。如旅游 App；</li><li>实况：新闻类 push，推送实时突发重要消息，增强内容价值；</li></ul></li></ul><h3 id="内容与形式多样化" tabindex="-1">内容与形式多样化 <a class="header-anchor" href="#内容与形式多样化" aria-label="Permalink to &quot;内容与形式多样化&quot;">​</a></h3><p>不同产品群体有着不同的偏好差异，运营方可以通过整理高打开的推送标题、正文，筛选关键词，建立关键词库，提升推送数据效果。尤其对于时效性低但打开率高的内容，可以建立内容池，周期性的面目标群体自动分发内容。</p><p>提升点击率的几个 tips</p><ul><li><p>消息内容设计个性化</p><ul><li><ol><li>女性产品，有 emoji 的打开率更高；</li></ol></li><li>艾特用户名的（@针眼画师），打开率更高；</li><li>半角比全角更合适，“送你 100 元优惠券”比“送你 1 0 0 元优惠券”打开率低；</li><li>中英文数字间最好有空格，比如这篇文章所有的 Push 前后都有空格；</li><li>策略含产品推荐时，太长要做省略设计，“...”就可以；</li></ul></li><li><p>支持更丰富的推送形式，如消息到达声音、大图、多图等</p><ul><li>主要风险在于不同机型可能存在适配问题，影响展示，发送成本偏高；特殊消息铃声形成打扰，也可能促进用户关闭消息。</li></ul></li></ul><h2 id="a-b-test" tabindex="-1">A&amp;B Test <a class="header-anchor" href="#a-b-test" aria-label="Permalink to &quot;A&amp;B Test&quot;">​</a></h2><p>A&amp;B Test 即将同一条 push，设计多个内容形式，推送到一定比例的目标群中，并在一定时间内观察点击率。将点击率更高的 push 发送给群体中的其他用户。 简单举例，如：某促销 push：『年中大促，全场优惠购，最高 9 折购』，计划发送 5 万人。 引入 AB 机制后，设计两条 push，测试推送比例 20%</p><ul><li>A：『年中大促，全场优惠购，最高 9 折购』，发送 5000 人，点击率 70%</li><li>B：『年中大促，全场优惠购，最高减 1000 元 』，发送 5000 人，点击率 90% 这时打开率比较，B＞A，系统自动将 B push 内容发送给剩余 80%的用户，即 4 万人，从而提升整体打开率。</li></ul><p>无论是否有 A&amp;B 系统功能支持，A&amp;B 测试思维是贯穿 Push 优化始终的，它不仅能够帮助我们明确什么是合适的推送，还能让我们明白用户当下对什么语气、什么问题感兴趣，这不仅与推送相关，更有助于我们把握业务方向。</p><p>这里不展开。 [[A&amp;B Test]] [[补充：abtest]]</p>',54),e=[h];function t(u,r,o,n,d,c){return a(),i("div",null,e)}const b=l(s,[["render",t]]);export{m as __pageData,b as default};

import{_ as s,o as a,c as i,R as e}from"./chunks/framework.rW_MhUre.js";const u=JSON.parse('{"title":"快速上手","description":"","frontmatter":{},"headers":[],"relativePath":"vitepress/快速上手.md","filePath":"vitepress/快速上手.md","lastUpdated":1702461468000}'),t={name:"vitepress/快速上手.md"},n=e(`<h1 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h1><p>本节将帮助你从头开始搭建一个简单的 VitePress 文档站点。</p><h2 id="配置部署" tabindex="-1">配置部署 <a class="header-anchor" href="#配置部署" aria-label="Permalink to &quot;配置部署&quot;">​</a></h2><h3 id="先决条件" tabindex="-1">先决条件 <a class="header-anchor" href="#先决条件" aria-label="Permalink to &quot;先决条件&quot;">​</a></h3><ul><li>Node.js 版本 18 或更高版本。</li><li>用于通过其命令行界面 （CLI） 访问 VitePress 的终端。</li><li>建议使用 <a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">VSCode</a> 以及 <a href="https://marketplace.visualstudio.com/items?itemName=Vue.volar" target="_blank" rel="noreferrer">Vue 官方扩展</a>。 VitePress 可以单独使用，也可以安装到现有项目中。在这两种情况下，您都可以使用以下命令进行安装：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>VitePress 是一个仅限 ESM 的软件包。不要用于 <code>require ()</code> 导入它，并确保离您最近的 <code>package.json</code> 包含 <code>&quot;type&quot;: &quot;module&quot;</code> ，或更改相关文件的文件扩展名，例如 <code>.vitepress/config.js</code> <code>.mjs</code> / <code>.mts</code> 。有关更多详细信息，请参阅 <a href="http://vitejs.dev/guide/troubleshooting.html#this-package-is-esm-only" target="_blank" rel="noreferrer">Vite 官方故障排除指南</a>。此外，在异步 CJS 上下文中，您可以改用 <code>await import (&#39;vitepress&#39;)</code> 。</p></div><h3 id="安装向导" tabindex="-1">安装向导 <a class="header-anchor" href="#安装向导" aria-label="Permalink to &quot;安装向导&quot;">​</a></h3><p>VitePress 附带了一个命令行设置向导，可帮助您搭建基本项目的脚手架。安装后，通过运行以下命令启动向导：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>回答几个简单问题</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>┌  Welcome to VitePress!</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Where should VitePress initialize the config?</span></span>
<span class="line"><span>│  ./docs</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site title:</span></span>
<span class="line"><span>│  My Awesome Project</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◇  Site description:</span></span>
<span class="line"><span>│  A VitePress Site</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◆  Theme:</span></span>
<span class="line"><span>│  ● Default Theme (Out of the box, good-looking docs)</span></span>
<span class="line"><span>│  ○ Default Theme + Customization</span></span>
<span class="line"><span>│  ○ Custom Theme</span></span>
<span class="line"><span>└</span></span></code></pre></div><h3 id="文件结构" tabindex="-1">文件结构 <a class="header-anchor" href="#文件结构" aria-label="Permalink to &quot;文件结构&quot;">​</a></h3><p>如果您正在构建一个独立的 VitePress 站点，您可以在当前目录中搭建站点脚手架 （<code>./</code>）。但是，如果您将 VitePress 与其他源代码一起安装在现有项目中，建议将站点搭建在嵌套目录（例如 <code>./docs</code> ）中，以便它与项目的其余部分分开。</p><p>假设您选择在 中搭建 VitePress 项目的脚手架 <code>./docs</code> ，生成的文件结构应如下所示：</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>默认情况下，VitePress 将其开发服务器缓存存储在 <code>.vitepress/cache .vitepress/dist</code> 中，并将生产构建输出存储在 <code>.vitepress/cache .vitepress/dist</code> 中。如果使用 Git，则应将它们添加到 <code>.gitignore</code> 文件中。还可以配置这些位置。</p></div><h3 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h3><p>配置文件 （<code>.vitepress/config.js</code>） 允许您自定义 VitePress 站点的各个方面，最基本的选项是站点的标题和描述：</p><div class="language-JS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JS</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//.vitepress/config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //site-level options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;VitePress&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Just playing around.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  themeConfig: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //theme-level options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>您还可以通过该 <code>themeConfig</code> 选项配置主题的行为。有关所有配置选项的完整详细信息，请参阅 <a href="https://vitepress.dev/reference/site-config" target="_blank" rel="noreferrer">配置参考</a>。</p><h3 id="源文件" tabindex="-1">源文件 <a class="header-anchor" href="#源文件" aria-label="Permalink to &quot;源文件&quot;">​</a></h3><p>VitePress 使用基于文件的路由：每个 <code>.md</code> 文件被编译成具有相同路径的相应 <code>.html</code> 文件。例如，将被编译成 <code>index.html</code> ， <code>index.md</code> 并且可以在生成的 VitePress 站点的根路径 <code>/</code> 下访问。</p><p>VitePress 还提供了生成干净 URL、重写路径和动态生成页面的能力。这些内容将在 <a href="https://vitepress.dev/guide/routing" target="_blank" rel="noreferrer">官方路由指南</a> 中介绍。</p><h3 id="启动并运行" tabindex="-1">启动并运行 <a class="header-anchor" href="#启动并运行" aria-label="Permalink to &quot;启动并运行&quot;">​</a></h3><p>将以下 npm 脚本注入到您的 <code>package.json</code> 中：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress build docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;docs:preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress preview docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>该 <code>docs:dev</code> 脚本将启动具有即时热更新的本地开发服务器。使用以下命令运行它：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>除了 npm 脚本，您还可以直接使用以下命令调用 VitePress：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span></code></pre></div><p><a href="https://vitepress.dev/reference/cli" target="_blank" rel="noreferrer">CLI 参考</a> 中记录了更多命令行用法。 开发服务器应在 <code>http://localhost:5173</code> 上运行。访问浏览器中的 URL，查看新网站的运行情况。 如需指定端口，需修改 <code>package.json</code> 文件，添加 <code>--port 端口号</code></p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs:dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitepress dev docs --port 5173&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span></code></pre></div><h2 id="官方资料" tabindex="-1">官方资料 <a class="header-anchor" href="#官方资料" aria-label="Permalink to &quot;官方资料&quot;">​</a></h2><ul><li><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress 官网</a>， 推荐，资料全面</li><li>[VitePress 快速上手中文教程 ](<a href="https://vitepress.yiov.top/" target="_blank" rel="noreferrer">https://vitepress.yiov.top/</a> ,中文</li><li><a href="https://vitejs.cn/vitepress/" target="_blank" rel="noreferrer">VitePress 中文网</a></li></ul>`,34),p=[n];function l(h,o,r,d,c,k){return a(),i("div",null,p)}const E=s(t,[["render",l]]);export{u as __pageData,E as default};

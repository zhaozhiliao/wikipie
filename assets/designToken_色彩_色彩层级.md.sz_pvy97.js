import{_ as t,o as e,c as r,R as a}from"./chunks/framework.rW_MhUre.js";const o="/wikipie/assets/frame.iMRBvtW4.png",m=JSON.parse('{"title":"色彩层级","description":"","frontmatter":{},"headers":[],"relativePath":"designToken/色彩/色彩层级.md","filePath":"designToken/色彩/色彩层级.md","lastUpdated":1719283094000}'),d={name:"designToken/色彩/色彩层级.md"},n=a('<h1 id="色彩层级" tabindex="-1">色彩层级 <a class="header-anchor" href="#色彩层级" aria-label="Permalink to &quot;色彩层级&quot;">​</a></h1><p>本章将深入讨论 Design Token 中关键的色彩体系(Color Design)。我将围绕<strong>色彩层级</strong>、<strong>命名规范</strong>、<strong>设计交付</strong>三个方面进行详细探讨。</p><h2 id="划分层级的必要性" tabindex="-1">划分层级的必要性 <a class="header-anchor" href="#划分层级的必要性" aria-label="Permalink to &quot;划分层级的必要性&quot;">​</a></h2><p>通常，UI 设计以十六进制色值（如#F5F5F）为元素上色，但存在以下问题：</p><ol><li><strong>色彩混乱</strong>：个人色彩感知差异导致实际色值不同，引发整体视觉混乱。每个人有自己的色彩感觉，没有规范的颜色参考，每个人使用的颜色即使在视觉上差异不大，但实际调用的色值可能出现不同。比如，#F5F5F5 和 # F5F5F9，从视觉上很难看出什么区别。但恰是由于这种看似一致，实际不一致的颜色标号，随着设计工程越来越复杂，最终必然导致页面与页面间，场景与场景间，整体视觉的混乱；</li><li><strong>灵活性差</strong>：项目上线后，难以在紧急场景中灵活调整设计。</li><li><strong>扩展性差</strong>：业务越复杂，越要求颜色表达统一、规范，无层级或单一层级难以满足复杂业务需求。</li></ol><p>因此出于视觉统一和灵活维护的考虑，设计体系中，颜色的使用既要遵循一定的约束规则，也要在约束的基础上，保证设计扩展的灵活性，以实现其能支撑各类场景。实现这一目的的手段就是对颜色进行分层。</p><h2 id="如何划分层级" tabindex="-1">如何划分层级 <a class="header-anchor" href="#如何划分层级" aria-label="Permalink to &quot;如何划分层级&quot;">​</a></h2><h2 id="第一层-base-color" tabindex="-1">第一层：base color <a class="header-anchor" href="#第一层-base-color" aria-label="Permalink to &quot;第一层：base color&quot;">​</a></h2><p>这一层主要是从海量颜色中，选出我们常用的颜色值，我们称为基础色值。我们需要对基础色值按一定规范，构建颜色梯度，创建常用色卡（如图）。</p><p><img src="'+o+'" alt="color-card"></p><p>在这一层中，我们设定不同的 token 和对应的基础色值，构成了基本色库；</p><p>在 token 的命名方式上，以简练表达为主，不同梯度之间建议以 100 或 1000 进行划分。比如，对红色卡，token 为 red，不同梯度用red-100、red-200...区分。</p><table><thead><tr><th>token</th><th>变量值（基础色值）</th></tr></thead><tbody><tr><td>red-100</td><td>#FEE0D8</td></tr><tr><td>red-200</td><td>#FDBAB2</td></tr><tr><td>red-300</td><td>#FB8D8B</td></tr><tr><td>red-400</td><td>#F86E78</td></tr><tr><td>red-500</td><td>#F43F5E</td></tr><tr><td>red-600</td><td>#D12E59</td></tr></tbody></table><h2 id="第二层-场景命名" tabindex="-1">第二层：场景命名 <a class="header-anchor" href="#第二层-场景命名" aria-label="Permalink to &quot;第二层：场景命名&quot;">​</a></h2><p>这一 这一层</p>',15),s=[n];function i(l,c,h,_,p,g){return e(),r("div",null,s)}const k=t(d,[["render",i]]);export{m as __pageData,k as default};

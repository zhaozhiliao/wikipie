import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.cf60f399.js";const l="/wikipie/assets/image.3efdd204.png",e="/wikipie/assets/image-2.8a414ee3.png",o="/wikipie/assets/image-1.5eea941e.png",t="/wikipie/assets/image-3.35af5c48.png",A=JSON.parse('{"title":"如何部署 Vitepress 静态博客","description":"","frontmatter":{},"headers":[],"relativePath":"posts/如何部署 Vitepress 静态博客.md","filePath":"posts/如何部署 Vitepress 静态博客.md","lastUpdated":1701535394000}'),c={name:"posts/如何部署 Vitepress 静态博客.md"},r=p(`<h1 id="如何部署-vitepress-静态博客" tabindex="-1">如何部署 Vitepress 静态博客 <a class="header-anchor" href="#如何部署-vitepress-静态博客" aria-label="Permalink to &quot;如何部署 Vitepress 静态博客&quot;">​</a></h1><h2 id="简要说明" tabindex="-1">简要说明 <a class="header-anchor" href="#简要说明" aria-label="Permalink to &quot;简要说明&quot;">​</a></h2><p>这篇文章主要用于记录如何在 github、vercel 和 netlify 上部署静态博客项目。最大的好处是无需服务器即可搭建网站，维护和运营成本较低。</p><h2 id="github-page-服务" tabindex="-1">Github Page 服务 <a class="header-anchor" href="#github-page-服务" aria-label="Permalink to &quot;Github Page 服务&quot;">​</a></h2><h3 id="创建-github-仓库" tabindex="-1">创建 github 仓库 <a class="header-anchor" href="#创建-github-仓库" aria-label="Permalink to &quot;创建 github 仓库&quot;">​</a></h3><p>这一步比较简单，直接在 <a href="https://github.com" target="_blank" rel="noreferrer">Github</a> 官网操作即可，该仓库用于存放项目文件，这里就不再赘述了。</p><h3 id="利用-github-actions" tabindex="-1">利用 GitHub Actions <a class="header-anchor" href="#利用-github-actions" aria-label="Permalink to &quot;利用 GitHub Actions&quot;">​</a></h3><p>GitHub Actions 是 GitHub 提供的一种自动化工作流服务。 首先在项目根目录下，创建.github/workflows/vitepress.yml，这是 GitHub Actions 的配置文件，用于定义和配置 Vitepress 项目的自动化工作流。 该 YAML 文件主要包含了一系列指令和步骤，这些指令和步骤描述了 GitHub Actions 应该如何执行构建和部署 Vitepress 项目。以下是是我的 vitepress.yml 配置文件供你参考。将仓库名和仓库路径填入 vitepress.yml 中。</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">GitHub Actions Build and Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">on</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 设置执行 GitHub Actions 的触发条件，当前为推送到 main 分支时触发构建</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">push</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">branches</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">jobs</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">build-and-deploy</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">runs-on</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ubuntu-latest</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#指定服务器的运行环境：最新版本 ubuntu</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">steps</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 设置 GitHub Actions 中设置环境变量</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Set DEPLOY_ENV</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">run</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">echo &quot;DEPLOY_ENV=GH_PAGES&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 使用 actions/checkout@v4 库拉取代码到 ubuntu 上</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Checkout</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;"># 根据网上资料查询此处可以设置为 false。https://github.com/actions/checkout</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">persist-credentials</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 安装 pnpm</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Install pnpm</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pnpm/action-setup@v2</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 设置 node 的版本</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Use Node.js</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 使用 actions/setup-node@v3 库安装 nodejs，with 提供了一个参数 node-version 表示要安装的 nodejs 版本</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">node-version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;18.x&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">cache</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pnpm&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 打包成静态文件</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Build</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">run</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pnpm install &amp;&amp; pnpm run docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 部署到 GitHub Pages - 也就是将打包内容发布到 GitHub Pages</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deploy</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">uses</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 自定义环境变量</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">with</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">github_token</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">\${{secrets.your secrets Token}}</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">publish_dir</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">./docs/.vitepress/dist</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 请根据您的实际情况调整路径</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;"># 指定仓库：你要发布的仓库路径名</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">repository-name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Your repositories/Your project</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;"># 部署到 deploy-pages 分支，也就是部署后提交到那个分支</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">branch</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">deploy-pages</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;"># 填写打包好的目录名称路径，本项目配置在根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">folder</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">dist</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">GitHub Actions Build and Deploy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">on</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 设置执行 GitHub Actions 的触发条件，当前为推送到 main 分支时触发构建</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">push</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">branches</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">jobs</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">build-and-deploy</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">runs-on</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ubuntu-latest</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#指定服务器的运行环境：最新版本 ubuntu</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">steps</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 设置 GitHub Actions 中设置环境变量</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Set DEPLOY_ENV</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">run</span><span style="color:#24292E;">: </span><span style="color:#032F62;">echo &quot;DEPLOY_ENV=GH_PAGES&quot; &gt;&gt; $GITHUB_ENV</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 使用 actions/checkout@v4 库拉取代码到 ubuntu 上</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Checkout</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">actions/checkout@v4</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;"># 根据网上资料查询此处可以设置为 false。https://github.com/actions/checkout</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">persist-credentials</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 安装 pnpm</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Install pnpm</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pnpm/action-setup@v2</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 设置 node 的版本</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Use Node.js</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 使用 actions/setup-node@v3 库安装 nodejs，with 提供了一个参数 node-version 表示要安装的 nodejs 版本</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">actions/setup-node@v3</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">node-version</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;18.x&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">cache</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pnpm&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 打包成静态文件</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Build</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">run</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pnpm install &amp;&amp; pnpm run docs:build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 部署到 GitHub Pages - 也就是将打包内容发布到 GitHub Pages</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deploy</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">uses</span><span style="color:#24292E;">: </span><span style="color:#032F62;">peaceiris/actions-gh-pages@v3</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 自定义环境变量</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">with</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">github_token</span><span style="color:#24292E;">: </span><span style="color:#032F62;">\${{secrets.your secrets Token}}</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">publish_dir</span><span style="color:#24292E;">: </span><span style="color:#032F62;">./docs/.vitepress/dist</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 请根据您的实际情况调整路径</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;"># 指定仓库：你要发布的仓库路径名</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">repository-name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Your repositories/Your project</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;"># 部署到 deploy-pages 分支，也就是部署后提交到那个分支</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">branch</span><span style="color:#24292E;">: </span><span style="color:#032F62;">deploy-pages</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;"># 填写打包好的目录名称路径，本项目配置在根目录</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">folder</span><span style="color:#24292E;">: </span><span style="color:#032F62;">dist</span></span></code></pre></div><h3 id="your-secrets-token-设置" tabindex="-1">your secrets Token 设置 <a class="header-anchor" href="#your-secrets-token-设置" aria-label="Permalink to &quot;your secrets Token 设置&quot;">​</a></h3><p>上面 vitepress.yml 需要用到 secrets Token，按以下步骤创建即可。</p><ol><li><p><strong>生成 DeveloperToken</strong></p><p>首先进入个人账户 setting 设置页面，点击 Developer settings，选择 Personal access tokens-Tokens （classic），创建 token。 这里要设置有效期和仓库读写权限。</p><p><img src="`+l+'" alt="Alt text"></p><p>注意，创建完成后，记住这个值</p><p><img src="'+e+'" alt="Alt text"></p></li><li><p><strong>设置 Actions secrets</strong></p><p>首先进入仓库 setting 页面，点击 Secrets and variables，选择 Actions，点击 New repository secret 进行创建。</p><p><img src="'+o+'" alt="Alt text"></p></li><li><p><strong>将生成的 Repository secrets, 替换 your secrets Token</strong></p><p><img src="'+t+`" alt="Alt text"></p></li></ol><h3 id="推送项目到仓库" tabindex="-1">推送项目到仓库 <a class="header-anchor" href="#推送项目到仓库" aria-label="Permalink to &quot;推送项目到仓库&quot;">​</a></h3><ol><li><p><strong>创建.gitignore 文件</strong></p><p>在根目录下创建.gitignore 文件，忽略特定文件夹，不上传到仓库。参考</p><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">node_modules/</span></span>
<span class="line"><span style="color:#e1e4e8;">dist/</span></span>
<span class="line"><span style="color:#e1e4e8;">pnpm-lock.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">node_modules/</span></span>
<span class="line"><span style="color:#24292e;">dist/</span></span>
<span class="line"><span style="color:#24292e;">pnpm-lock.yaml</span></span></code></pre></div></li><li><p><strong>初始化本地仓库</strong></p><p>打开终端（命令行界面），进入你的项目目录，并执行以下命令初始化本地仓库：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git init</span></span></code></pre></div></li><li><p><strong>添加远程仓库地址</strong></p><p>执行以下命令，将你的远程仓库地址添加为本地仓库的远程地址：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git remote add origin https://github.com/YourRepositoriesAddress.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git remote add origin https://github.com/YourRepositoriesAddress.git</span></span></code></pre></div><p>注意，请替换 <a href="https://github.com/YourRepositoriesAddress.git" target="_blank" rel="noreferrer">https://github.com/YourRepositoriesAddress.git</a> 为你的实际仓库地址。</p></li><li><p><strong>添加文件，提交变更（依次执行）</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git add .</span></span>
<span class="line"><span style="color:#e1e4e8;">git commit -m &quot;Initial commit&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git add .</span></span>
<span class="line"><span style="color:#24292e;">git commit -m &quot;Initial commit&quot;</span></span></code></pre></div></li><li><p><strong>推送到远程仓库</strong></p><p>执行以下命令，将本地仓库的内容推送到远程仓库：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git push -u origin main</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git push -u origin main</span></span></code></pre></div><p>如果你的默认分支是 main，如果是其他分支，请将上述命令中的 main 替换为你的默认分支名称。 以上步骤完成后，你的项目文件就会被推送到 GitHub 仓库中。之后，GitHub Actions 就会开始执行你配置的构建和部署任务。如果一切顺利，你的 VitePress 项目就会成功部署到 GitHub Pages。</p></li></ol><h3 id="设置-github-pages-服务" tabindex="-1">设置 GitHub Pages 服务 <a class="header-anchor" href="#设置-github-pages-服务" aria-label="Permalink to &quot;设置 GitHub Pages 服务&quot;">​</a></h3><p>进入项目仓库 setting 设置页，点击 pages，选择 branch 分支，根据我们的设置，部署完成后，项目生成的静态文件会存放到 gh-pages 分支下，因此需要将分支更改为 gh-pages。点击 save 保存。 至此，刷新页面，则生成了网站地址，可以进行访问了。也可以根据自己需要，自定义自己的域名。</p><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><ol><li>访问网站发现样式丢失 这种情况需要检查你项目下，docs/.vitepress/config.mjs 文件。调整 base 的值。<div class="language-mjs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mjs</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">import { defineConfig } from &#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">export default defineConfig ({</span></span>
<span class="line"><span style="color:#e1e4e8;"> base: &#39;/YourRepositoryName/&#39;,  // 在 GitHub Pages 上部署时的基本路径</span></span>
<span class="line"><span style="color:#e1e4e8;"> })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">import { defineConfig } from &#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#24292e;">export default defineConfig ({</span></span>
<span class="line"><span style="color:#24292e;"> base: &#39;/YourRepositoryName/&#39;,  // 在 GitHub Pages 上部署时的基本路径</span></span>
<span class="line"><span style="color:#24292e;"> })</span></span></code></pre></div></li></ol><h2 id="vercel-部署" tabindex="-1">vercel 部署 <a class="header-anchor" href="#vercel-部署" aria-label="Permalink to &quot;vercel 部署&quot;">​</a></h2><p>使用 vercel 进行部署</p><h2 id="netlify-deploy" tabindex="-1">netlify deploy <a class="header-anchor" href="#netlify-deploy" aria-label="Permalink to &quot;netlify deploy&quot;">​</a></h2><p>使用 netlify 进行部署</p>`,22),i=[r];function E(y,d,u,h,g,b){return n(),a("div",null,i)}const v=s(c,[["render",E]]);export{A as __pageData,v as default};
